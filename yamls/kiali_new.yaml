apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali
  namespace: istio-system
---
apiVersion: v1
data:
  config.yaml: "auth:\n  openid: {}\n  openshift:\n    client_id_prefix: kiali\n \
    \ strategy: anonymous\ndeployment:\n  accessible_namespaces:\n  - '**'\n  additional_service_yaml:\
    \ {}\n  affinity:\n    node: {}\n    pod: {}\n    pod_anti: {}\n  hpa:\n    api_version:\
    \ autoscaling/v2beta2\n    spec: {}\n  image_name: quay.io/kiali/kiali\n  image_pull_policy:\
    \ Always\n  image_pull_secrets: []\n  image_version: v1.38\n  ingress_enabled:\
    \ false\n  instance_name: kiali\n  logger:\n    log_format: text\n    log_level:\
    \ info\n    sampler_rate: \"1\"\n    time_field_format: 2006-01-02T15:04:05Z07:00\n\
    \  namespace: istio-system\n  node_selector: {}\n  override_ingress_yaml:\n  \
    \  metadata: {}\n  pod_annotations:\n    sidecar.istio.io/inject: \"false\"\n\
    \  pod_labels: {}\n  priority_class_name: \"\"\n  replicas: 1\n  resources: {}\n\
    \  secret_name: kiali\n  service_annotations: {}\n  service_type: \"\"\n  tolerations:\
    \ []\n  version_label: v1.38.0\n  view_only_mode: false\nexternal_services:\n\
    \  custom_dashboards:\n    enabled: true\nidentity:\n  cert_file: \"\"\n  private_key_file:\
    \ \"\"\nistio_namespace: istio-system\nlogin_token:\n  signing_key: CHANGEME\n\
    server:\n  metrics_enabled: true\n  metrics_port: 9090\n  port: 20001\n  web_root:\
    \ /kiali\n"
kind: ConfigMap
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali-viewer
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  - endpoints
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - namespaces
  - pods
  - replicationcontrollers
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - pods/portforward
  verbs:
  - create
  - post
- apiGroups:
  - extensions
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  - security.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - project.openshift.io
  resources:
  - projects
  verbs:
  - get
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
- apiGroups:
  - iter8.tools
  resources:
  - experiments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  - endpoints
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - namespaces
  - pods
  - replicationcontrollers
  - services
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ''
  resources:
  - pods/portforward
  verbs:
  - create
  - post
- apiGroups:
  - extensions
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - networking.istio.io
  - security.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - project.openshift.io
  resources:
  - projects
  verbs:
  - get
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
- apiGroups:
  - iter8.tools
  resources:
  - experiments
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kiali
subjects:
- kind: ServiceAccount
  name: kiali
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali-controlplane
  namespace: istio-system
rules:
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali-controlplane
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kiali-controlplane
subjects:
- kind: ServiceAccount
  name: kiali
  namespace: istio-system
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali
  namespace: istio-system
spec:
  ports:
  - name: http
    port: 20001
    protocol: TCP
  - name: http-metrics
    port: 9090
    protocol: TCP
  selector:
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/name: kiali
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.38.0
    helm.sh/chart: kiali-server-1.38.0
    version: v1.38.0
  name: kiali
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kiali
      app.kubernetes.io/name: kiali
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kiali.io/dashboards: go,kiali
        prometheus.io/port: '9090'
        prometheus.io/scrape: 'true'
        sidecar.istio.io/inject: 'false'
      labels:
        app: kiali
        app.kubernetes.io/instance: kiali
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kiali
        app.kubernetes.io/part-of: kiali
        app.kubernetes.io/version: v1.38.0
        helm.sh/chart: kiali-server-1.38.0
        version: v1.38.0
      name: kiali
    spec:
      containers:
      - command:
        - /opt/kiali/kiali
        - -config
        - /kiali-configuration/config.yaml
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: info
        - name: LOG_FORMAT
          value: text
        - name: LOG_TIME_FIELD_FORMAT
          value: 2006-01-02T15:04:05Z07:00
        - name: LOG_SAMPLER_RATE
          value: '1'
        image: lslab.ericsson.cn/quay.io/kiali/kiali:v1.38
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /kiali/healthz
            port: api-port
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
        name: kiali
        ports:
        - containerPort: 20001
          name: api-port
        - containerPort: 9090
          name: http-metrics
        readinessProbe:
          httpGet:
            path: /kiali/healthz
            port: api-port
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /kiali-configuration
          name: kiali-configuration
        - mountPath: /kiali-cert
          name: kiali-cert
        - mountPath: /kiali-secret
          name: kiali-secret
        - mountPath: /kiali-cabundle
          name: kiali-cabundle
      imagePullSecrets:
      - name: harbor
      serviceAccountName: kiali
      volumes:
      - configMap:
          name: kiali
        name: kiali-configuration
      - name: kiali-cert
        secret:
          optional: true
          secretName: istio.kiali-service-account
      - name: kiali-secret
        secret:
          optional: true
          secretName: kiali
      - configMap:
          name: kiali-cabundle
          optional: true
        name: kiali-cabundle
